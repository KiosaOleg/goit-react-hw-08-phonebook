{"version":3,"file":"static/js/137.0782954a.chunk.js","mappings":"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","sources":["redux/contact/selectors.js","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","components/SearchInput/SearchInput.styled.jsx","components/SearchInput/SearchInput.jsx","components/ContactList/ContactLIst.styled.jsx","components/ContactList/ContactList.jsx","components/pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (typeof filter !== 'string' || filter.trim() === '') {\n      // Handle the case when filter is not a valid string\n      return contacts;\n    }\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const NameLabel = styled.label`\n  margin-right: 15px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 3px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid #e8e8e8;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    outline: none;\n    border: none;\n    border-bottom: 2px solid #e8e8e8;\n  }\n`;\nexport const AddContactBtn = styled.button`\n  max-height: 25px;\n  margin-left: 10px;\n  border: 1px solid #a7a7a7ec;\n  border-radius: 5px;\n  transition: all 250ms;\n\n  &:hover {\n    color: #ffffff;\n    background: rgb(255, 111, 174);\n    background: linear-gradient(\n      27deg,\n      rgba(255, 111, 174, 1) 0%,\n      rgba(98, 170, 255, 1) 100%\n    );\n    box-shadow: rgb(255, 254, 254) 0px 0px 3px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\n\nimport { addContact } from 'redux/contact/operations';\nimport { selectContacts } from 'redux/contact/selectors';\n\nimport PropTypes from 'prop-types';\nimport { HiUserAdd } from 'react-icons/hi';\nimport { NameLabel, AddContactBtn, Input } from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const phoneNumberInputId = nanoid();\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n      // id: nanoid(),\n    };\n\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    checkContact\n      ? alert(`${name} is already in contact`)\n      : dispatch(addContact(contact));\n\n    resetSubmit();\n  };\n\n  const resetSubmit = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <NameLabel htmlFor={nameInputId}>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n            placeholder=\"Please write name\"\n          />\n        </NameLabel>\n        <label htmlFor={phoneNumberInputId}>\n          Number:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={phoneNumberInputId}\n            placeholder=\"Please write number\"\n          />\n        </label>\n        <AddContactBtn tupe=\"submit\">\n          <HiUserAdd size={16} />\n        </AddContactBtn>\n      </form>\n    </div>\n  );\n}\n\nPhonebook.prototypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const SearchInputSt = styled.input`\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid #e8e8e8;\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    outline: none;\n    border: none;\n    border-bottom: 2px solid #e8e8e8;\n  }\n\n  ::placeholder {\n    color: #000000;\n    font-size: 12px;\n    font-style: italic;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchInputSt } from './SearchInput.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contact/selectors';\nimport { setFilter } from 'redux/contact/filterSlice';\n\nexport default function SearchInput() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      {/* <p>Search contact</p> */}\n      <SearchInputSt\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </div>\n  );\n}\n\nSearchInput.propTypes = {\n  filter: PropTypes.string,\n  changeFilterInput: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  margin: 5px 0;\n  width: 100%;\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: rgb(0, 0, 0) 0px 1px 5px;\n  transition: all 300ms;\n\n  &:hover {\n    background: rgb(255, 111, 174);\n    background: linear-gradient(\n      27deg,\n      rgba(255, 111, 174, 1) 0%,\n      rgba(98, 170, 255, 1) 100%\n    );\n    scale: 1.05;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.885) 0px 7px 10px;\n  }\n  &:hover img {\n    box-shadow: rgba(255, 255, 255, 0.9) 0px 0px 10px;\n  }\n`;\nexport const Avatar = styled.img`\n  margin-left: 10px;\n  width: 40px;\n  border-radius: 50px;\n  transition: all 250ms;\n`;\n\nexport const UserInfo = styled.p`\n  margin-left: 15px;\n`;\n\nexport const DeleteBtn = styled.button`\n  max-height: 25px;\n  margin-left: auto;\n  margin-right: 5px;\n  margin-right: 15px;\n  border: 1px solid #a7a7a7ec;\n  border-radius: 5px;\n\n  /* background-color: transparent; */\n  transition: all 250ms;\n\n  &:hover {\n    color: #ffffff;\n    background: rgb(255, 111, 174);\n    background: linear-gradient(\n      27deg,\n      rgba(255, 111, 174, 1) 0%,\n      rgba(98, 170, 255, 1) 100%\n    );\n    box-shadow: rgb(255, 254, 254) 0px 0px 3px;\n  }\n`;\n","import { motion } from 'framer-motion';\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport { DeleteBtn, List, Item, UserInfo, Avatar } from './ContactLIst.styled';\nimport { HiOutlineTrash } from 'react-icons/hi';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contact/operations';\nimport { selectFilteredContacts } from 'redux/contact/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const listVAriatns = {\n    visible: i => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: i * 0.1,\n      },\n    }),\n    hidden: { opacity: 0, y: -100 },\n  };\n\n  return (\n    <>\n      <List>\n        {contacts.map(({ id, name, number, avatar }, i) => {\n          return (\n            <motion.div\n              key={id}\n              variants={listVAriatns}\n              initial=\"hidden\"\n              animate=\"visible\"\n              custom={i}\n            >\n              <Item>\n                <Avatar\n                  src={\n                    avatar\n                      ? avatar\n                      : 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\n                  }\n                  alt=\"avatar\"\n                />\n                <UserInfo>\n                  {name}: {number}\n                </UserInfo>\n                <DeleteBtn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  <HiOutlineTrash size={20} />\n                </DeleteBtn>\n              </Item>\n            </motion.div>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n","// ContactsPage.jsx\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contact/operations';\n// import { selectIsLoading } from 'redux/contact/selectors';\n\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport ContactList from 'components/ContactList/ContactList';\n// import SkeletonItem from 'components/Skeleton/SkeletonItem';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <title>Your contacts</title>\n\n      <Phonebook />\n      <SearchInput />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContacts","createSelector","trim","name","toLowerCase","includes","NameLabel","styled","Input","AddContactBtn","Phonebook","useState","setName","number","setNumber","nameInputId","nanoid","phoneNumberInputId","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","resetSubmit","action","onSubmit","preventDefault","contact","checkContact","some","alert","addContact","htmlFor","type","pattern","title","required","onChange","id","placeholder","tupe","size","prototypes","PropTypes","SearchInputSt","SearchInput","e","setFilter","target","List","Item","Avatar","UserInfo","DeleteBtn","ContactList","listVAriatns","visible","i","opacity","y","transition","delay","hidden","map","avatar","motion","variants","initial","animate","custom","src","alt","onClick","deleteContact","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}